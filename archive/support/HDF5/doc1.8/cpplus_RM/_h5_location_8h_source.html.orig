<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>HDF5 C++ API: H5Location.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="hdf_logo.jpg"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">HDF5 C++ API
   &#160;<span id="projectnumber">1.8.20</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">H5Location.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// C++ informative line for the emacs editor: -*- C++ -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Copyright by The HDF Group.                                               *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright by the Board of Trustees of the University of Illinois.         *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * All rights reserved.                                                      *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *                                                                           *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * This file is part of HDF5.  The full HDF5 copyright notice, including     *</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * terms governing use, modification, and redistribution, is contained in    *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * the COPYING file, which can be found at the root of the source code       *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.  *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * If you do not have access to either file, you may request a copy from     *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * help@hdfgroup.org.                                                        *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#ifndef __H5Location_H</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __H5Location_H</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;H5Classes.h&quot;</span>          <span class="comment">// constains forward class declarations</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span>H5 {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">class </span>H5Location;  <span class="comment">// forward declaration for UserData4Aiterate</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">// Define the operator function pointer for H5Aiterate().</span></div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespace_h5.html#a5913cae82307d2db03277d081dd71b26">   25</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="namespace_h5.html#a5913cae82307d2db03277d081dd71b26">attr_operator_t</a>)(<a class="code" href="class_h5_1_1_h5_location.html">H5Location</a>&amp; loc<span class="comment">/*in*/</span>,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                 <span class="keyword">const</span> H5std_string attr_name<span class="comment">/*in*/</span>,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                 <span class="keywordtype">void</span> *operator_data<span class="comment">/*in,out*/</span>);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="class_h5_1_1_user_data4_aiterate.html">   29</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_h5_1_1_user_data4_aiterate.html">UserData4Aiterate</a> { <span class="comment">// user data for attribute iteration</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="class_h5_1_1_user_data4_aiterate.html#adc317bc595aa58e76e24a11f43367d13">   31</a></span>&#160;        <a class="code" href="namespace_h5.html#a5913cae82307d2db03277d081dd71b26">attr_operator_t</a> <a class="code" href="class_h5_1_1_user_data4_aiterate.html#adc317bc595aa58e76e24a11f43367d13">op</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="class_h5_1_1_user_data4_aiterate.html#a3aa5ddcad106d950c7eb0932a25fccb2">   32</a></span>&#160;        <span class="keywordtype">void</span>* <a class="code" href="class_h5_1_1_user_data4_aiterate.html#a3aa5ddcad106d950c7eb0932a25fccb2">opData</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="class_h5_1_1_user_data4_aiterate.html#a19aaf90cba18d5927bf8d7b216cbde21">   33</a></span>&#160;        <a class="code" href="class_h5_1_1_h5_location.html">H5Location</a>* <a class="code" href="class_h5_1_1_user_data4_aiterate.html#a19aaf90cba18d5927bf8d7b216cbde21">location</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;};</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">//  Inheritance: IdComponent</span></div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="class_h5_1_1_h5_location.html">   42</a></span>&#160;<span class="keyword">class </span>H5_DLLCPP <a class="code" href="class_h5_1_1_h5_location.html">H5Location</a> : <span class="keyword">public</span> <a class="code" href="class_h5_1_1_id_component.html">IdComponent</a> {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment">// Checks if a link of a given name exists in this location</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordtype">bool</span> nameExists(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_link_acc_prop_list.html">LinkAccPropList</a>&amp; lapl = <a class="code" href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">LinkAccPropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordtype">bool</span> nameExists(<span class="keyword">const</span> H5std_string&amp; name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_link_acc_prop_list.html">LinkAccPropList</a>&amp; lapl = <a class="code" href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">LinkAccPropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="comment">// Flushes all buffers associated with this location to disk.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordtype">void</span> flush(H5F_scope_t scope) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment">// Gets the name of the file, specified by this location.</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        H5std_string getFileName() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="comment">// Retrieves information about an object at this location</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="comment">// specified by location</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordtype">void</span> getObjectInfo(H5O_info_t *oinfo) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="comment">// specified by the object&#39;s name</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordtype">void</span> getObjectInfo(<span class="keyword">const</span> <span class="keywordtype">char</span> *name, H5O_info_t *oinfo,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keyword">const</span> <a class="code" href="class_h5_1_1_link_acc_prop_list.html">LinkAccPropList</a>&amp; lapl = <a class="code" href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">LinkAccPropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordtype">void</span> getObjectInfo(<span class="keyword">const</span> H5std_string&amp; name, H5O_info_t *oinfo,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="keyword">const</span> <a class="code" href="class_h5_1_1_link_acc_prop_list.html">LinkAccPropList</a>&amp; lapl = <a class="code" href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">LinkAccPropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Determines the number of attributes at this location.</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">// - moved to H5Object (1.8.20)</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordtype">int</span> getNumAttrs() <span class="keyword">const</span>;    <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#ifndef H5_NO_DEPRECATED_SYMBOLS</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor"></span>        <span class="comment">// Retrieves the type of object that an object reference points to.</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        H5G_obj_t getObjType(<span class="keywordtype">void</span> *ref, H5R_type_t ref_type = H5R_OBJECT) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* H5_NO_DEPRECATED_SYMBOLS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// Retrieves the type of object that an object reference points to.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        H5O_type_t getRefObjType(<span class="keywordtype">void</span> *ref, H5R_type_t ref_type = H5R_OBJECT) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// Note: getRefObjType deprecates getObjType, but getObjType&#39;s name is</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// misleading, so getRefObjType is used in the new function instead.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// Returns the object header version of an object</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordtype">unsigned</span> objVersion() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">// Sets the comment for an HDF5 object specified by its name.</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordtype">void</span> setComment(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* comment) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordtype">void</span> setComment(<span class="keyword">const</span> H5std_string&amp; name, <span class="keyword">const</span> H5std_string&amp; comment) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordtype">void</span> setComment(<span class="keyword">const</span> <span class="keywordtype">char</span>* comment) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordtype">void</span> setComment(<span class="keyword">const</span> H5std_string&amp; comment) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="comment">// Retrieves comment for the HDF5 object specified by its name.</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        ssize_t getComment(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">size_t</span> buf_size, <span class="keywordtype">char</span>* comment) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        H5std_string getComment(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">size_t</span> buf_size=0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        H5std_string getComment(<span class="keyword">const</span> H5std_string&amp; name, <span class="keywordtype">size_t</span> buf_size=0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="comment">// Removes the comment for the HDF5 object specified by its name.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordtype">void</span> removeComment(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordtype">void</span> removeComment(<span class="keyword">const</span> H5std_string&amp; name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment">// Creates a reference to a named object or to a dataset region</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment">// in this object.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordtype">void</span> reference(<span class="keywordtype">void</span>* ref, <span class="keyword">const</span> <span class="keywordtype">char</span>* name, </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                        H5R_type_t ref_type = H5R_OBJECT) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordtype">void</span> reference(<span class="keywordtype">void</span>* ref, <span class="keyword">const</span> H5std_string&amp; name, </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                        H5R_type_t ref_type = H5R_OBJECT) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordtype">void</span> reference(<span class="keywordtype">void</span>* ref, <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_data_space.html">DataSpace</a>&amp; dataspace,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                        H5R_type_t ref_type = H5R_DATASET_REGION) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordtype">void</span> reference(<span class="keywordtype">void</span>* ref, <span class="keyword">const</span> H5std_string&amp; name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_data_space.html">DataSpace</a>&amp; dataspace,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                        H5R_type_t ref_type = H5R_DATASET_REGION) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">// Open a referenced object whose location is specified by either</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="comment">// a file, an HDF5 object, or an attribute.</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordtype">void</span> dereference(<span class="keyword">const</span> <a class="code" href="class_h5_1_1_h5_location.html">H5Location</a>&amp; loc, <span class="keyword">const</span> <span class="keywordtype">void</span>* ref, H5R_type_t ref_type = H5R_OBJECT);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordtype">void</span> dereference(<span class="keyword">const</span> <a class="code" href="class_h5_1_1_attribute.html">Attribute</a>&amp; attr, <span class="keyword">const</span> <span class="keywordtype">void</span>* ref, H5R_type_t ref_type = H5R_OBJECT);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment">// Retrieves a dataspace with the region pointed to selected.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="class_h5_1_1_data_space.html">DataSpace</a> getRegion(<span class="keywordtype">void</span> *ref, H5R_type_t ref_type = H5R_DATASET_REGION) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment">// Opens an object at this location, without knowing the object type.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        hid_t openObjId(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_link_acc_prop_list.html">LinkAccPropList</a>&amp; lapl = <a class="code" href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">LinkAccPropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        hid_t openObjId(<span class="keyword">const</span> H5std_string&amp; name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_link_acc_prop_list.html">LinkAccPropList</a>&amp; lapl = <a class="code" href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">LinkAccPropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="comment">// Closes an object opened by openObjId().</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordtype">void</span> closeObjId(hid_t obj_id) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">virtual</span> hid_t getId() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">/***************************************************************************</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">                           Notes for H5A wrappers</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">                           ======================</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">        These H5A wrappers are marked &quot;deprecated&quot; in 1.8.19.</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">        They are moved to H5Object to prevent the object id from being</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">        passed in to H5A APIs.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">***************************************************************************/</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// Creates an attribute for the specified object at this location</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="comment">// PropList is currently not used, so always be default.</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_h5_1_1_attribute.html">Attribute</a> createAttribute(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_data_type.html">DataType</a>&amp; type, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_data_space.html">DataSpace</a>&amp; space, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_prop_list.html">PropList</a>&amp; create_plist = <a class="code" href="class_h5_1_1_prop_list.html#afc83f2807a50530db35d8ff40aceb1c4">PropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_h5_1_1_attribute.html">Attribute</a> createAttribute(<span class="keyword">const</span> H5std_string&amp; name, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_data_type.html">DataType</a>&amp; type, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_data_space.html">DataSpace</a>&amp; space, <span class="keyword">const</span> <a class="code" href="class_h5_1_1_prop_list.html">PropList</a>&amp; create_plist = <a class="code" href="class_h5_1_1_prop_list.html#afc83f2807a50530db35d8ff40aceb1c4">PropList::DEFAULT</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment">// Given its name, opens the attribute that belongs to an object at</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment">// this location.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_h5_1_1_attribute.html">Attribute</a> openAttribute(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_h5_1_1_attribute.html">Attribute</a> openAttribute(<span class="keyword">const</span> H5std_string&amp; name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="comment">// Given its index, opens the attribute that belongs to an object at</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="comment">// this location.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_h5_1_1_attribute.html">Attribute</a> openAttribute(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx) <span class="keyword">const</span>; <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="comment">// Iterate user&#39;s function over the attributes at this location.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> iterateAttrs(<a class="code" href="namespace_h5.html#a5913cae82307d2db03277d081dd71b26">attr_operator_t</a> user_op, <span class="keywordtype">unsigned</span>* idx = NULL,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                 <span class="keywordtype">void</span>* op_data = NULL); <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="comment">// Checks whether the named attribute exists at this location.</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> attrExists(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> attrExists(<span class="keyword">const</span> H5std_string&amp; name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment">// Renames the named attribute to a new name.</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> renameAttr(<span class="keyword">const</span> <span class="keywordtype">char</span>* oldname, <span class="keyword">const</span> <span class="keywordtype">char</span>* newname) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> renameAttr(<span class="keyword">const</span> H5std_string&amp; oldname, <span class="keyword">const</span> H5std_string&amp; newname) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment">// Removes the named attribute from this location.</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// Deprecated</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> removeAttr(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> removeAttr(<span class="keyword">const</span> H5std_string&amp; name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">/**************************** End of H5A note *******************************/</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor"></span>        <span class="comment">// Default constructor,</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <a class="code" href="class_h5_1_1_h5_location.html">H5Location</a>();</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">// *** Deprecation warning ***</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">// The following two constructors are no longer appropriate after the</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment">// data member &quot;id&quot; had been moved to the sub-classes.</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// The copy constructor is a noop and is removed in 1.8.15 and the</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment">// other will be removed from 1.10 release, and then from 1.8 if its</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="comment">// removal does not raise any problems in two 1.10 releases.</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="comment">// Creates a copy of an existing object giving the location id.</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <a class="code" href="class_h5_1_1_h5_location.html">H5Location</a>(<span class="keyword">const</span> hid_t loc_id);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="comment">// Creates a reference to an HDF5 object or a dataset region.</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordtype">void</span> p_reference(<span class="keywordtype">void</span>* ref, <span class="keyword">const</span> <span class="keywordtype">char</span>* name, hid_t space_id, H5R_type_t ref_type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="comment">// Dereferences a ref into an HDF5 id.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        hid_t p_dereference(hid_t loc_id, <span class="keyword">const</span> <span class="keywordtype">void</span>* ref, H5R_type_t ref_type, <span class="keyword">const</span> <span class="keywordtype">char</span>* from_func);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#ifndef H5_NO_DEPRECATED_SYMBOLS</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor"></span>        <span class="comment">// Retrieves the type of object that an object reference points to.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        H5G_obj_t p_get_obj_type(<span class="keywordtype">void</span> *ref, H5R_type_t ref_type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* H5_NO_DEPRECATED_SYMBOLS */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="comment">// Retrieves the type of object that an object reference points to.</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        H5O_type_t p_get_ref_obj_type(<span class="keywordtype">void</span> *ref, H5R_type_t ref_type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="comment">// Sets the identifier of this object to a new value. - this one</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="comment">// doesn&#39;t increment reference count</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> p_setId(<span class="keyword">const</span> hid_t new_id) = 0;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#endif // DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment">// Noop destructor.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keyword">virtual</span> ~<a class="code" href="class_h5_1_1_h5_location.html">H5Location</a>();</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}; <span class="comment">// end of H5Location</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;} <span class="comment">// namespace H5</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#endif // __H5Location_H</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">// Modification</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">//      Oct 1, 2013 -BMR</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">//          H5Location is added in version 1.8.12.</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">//          Most of these methods were in H5Object but are now moved here</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">//          because a location can be a file, group, dataset, or named datatype.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">//      May 04, 2017 -BMR</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">//          Wrappers for H5A functions are copied to H5Object because H5A</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">//          functions do not take an attribute id as loc_id.  The original</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">//          wrappers will be deprecated in future releases.</span></div>
<div class="ttc" id="class_h5_1_1_id_component_html"><div class="ttname"><a href="class_h5_1_1_id_component.html">H5::IdComponent</a></div><div class="ttdoc">Class IdComponent provides wrappers of the C functions that operate on an HDF5 identifier. </div><div class="ttdef"><b>Definition:</b> H5IdComponent.h:27</div></div>
<div class="ttc" id="class_h5_1_1_data_space_html"><div class="ttname"><a href="class_h5_1_1_data_space.html">H5::DataSpace</a></div><div class="ttdoc">Class DataSpace inherits from IdComponent and provides wrappers for the HDF5&amp;#39;s dataspaces. </div><div class="ttdef"><b>Definition:</b> H5DataSpace.h:25</div></div>
<div class="ttc" id="class_h5_1_1_attribute_html"><div class="ttname"><a href="class_h5_1_1_attribute.html">H5::Attribute</a></div><div class="ttdoc">Class Attribute operates on HDF5 attributes. </div><div class="ttdef"><b>Definition:</b> H5Attribute.h:29</div></div>
<div class="ttc" id="class_h5_1_1_link_acc_prop_list_html"><div class="ttname"><a href="class_h5_1_1_link_acc_prop_list.html">H5::LinkAccPropList</a></div><div class="ttdoc">Class LinkAccPropList inherits from PropList and provides wrappers for the HDF5 file access property ...</div><div class="ttdef"><b>Definition:</b> H5LaccProp.h:29</div></div>
<div class="ttc" id="class_h5_1_1_data_type_html"><div class="ttname"><a href="class_h5_1_1_data_type.html">H5::DataType</a></div><div class="ttdoc">Class DataType provides generic operations on HDF5 datatypes. </div><div class="ttdef"><b>Definition:</b> H5DataType.h:28</div></div>
<div class="ttc" id="class_h5_1_1_h5_location_html"><div class="ttname"><a href="class_h5_1_1_h5_location.html">H5::H5Location</a></div><div class="ttdoc">H5Location is an abstract base class, providing a collection of wrappers of the C functions that take...</div><div class="ttdef"><b>Definition:</b> H5Location.h:42</div></div>
<div class="ttc" id="class_h5_1_1_user_data4_aiterate_html_a3aa5ddcad106d950c7eb0932a25fccb2"><div class="ttname"><a href="class_h5_1_1_user_data4_aiterate.html#a3aa5ddcad106d950c7eb0932a25fccb2">H5::UserData4Aiterate::opData</a></div><div class="ttdeci">void * opData</div><div class="ttdef"><b>Definition:</b> H5Location.h:32</div></div>
<div class="ttc" id="class_h5_1_1_link_acc_prop_list_html_a28771666bb402894685651b450cc42e8"><div class="ttname"><a href="class_h5_1_1_link_acc_prop_list.html#a28771666bb402894685651b450cc42e8">H5::LinkAccPropList::DEFAULT</a></div><div class="ttdeci">static const LinkAccPropList &amp; DEFAULT</div><div class="ttdoc">Default file access property list. </div><div class="ttdef"><b>Definition:</b> H5LaccProp.h:32</div></div>
<div class="ttc" id="namespace_h5_html_a5913cae82307d2db03277d081dd71b26"><div class="ttname"><a href="namespace_h5.html#a5913cae82307d2db03277d081dd71b26">H5::attr_operator_t</a></div><div class="ttdeci">void(* attr_operator_t)(H5Location &amp;loc, const H5std_string attr_name, void *operator_data)</div><div class="ttdef"><b>Definition:</b> H5Location.h:25</div></div>
<div class="ttc" id="class_h5_1_1_user_data4_aiterate_html_a19aaf90cba18d5927bf8d7b216cbde21"><div class="ttname"><a href="class_h5_1_1_user_data4_aiterate.html#a19aaf90cba18d5927bf8d7b216cbde21">H5::UserData4Aiterate::location</a></div><div class="ttdeci">H5Location * location</div><div class="ttdef"><b>Definition:</b> H5Location.h:33</div></div>
<div class="ttc" id="class_h5_1_1_prop_list_html"><div class="ttname"><a href="class_h5_1_1_prop_list.html">H5::PropList</a></div><div class="ttdoc">Class PropList provides operations for generic property lists. </div><div class="ttdef"><b>Definition:</b> H5PropList.h:26</div></div>
<div class="ttc" id="class_h5_1_1_prop_list_html_afc83f2807a50530db35d8ff40aceb1c4"><div class="ttname"><a href="class_h5_1_1_prop_list.html#afc83f2807a50530db35d8ff40aceb1c4">H5::PropList::DEFAULT</a></div><div class="ttdeci">static const PropList &amp; DEFAULT</div><div class="ttdoc">Default property list. </div><div class="ttdef"><b>Definition:</b> H5PropList.h:29</div></div>
<div class="ttc" id="class_h5_1_1_user_data4_aiterate_html"><div class="ttname"><a href="class_h5_1_1_user_data4_aiterate.html">H5::UserData4Aiterate</a></div><div class="ttdef"><b>Definition:</b> H5Location.h:29</div></div>
<div class="ttc" id="class_h5_1_1_user_data4_aiterate_html_adc317bc595aa58e76e24a11f43367d13"><div class="ttname"><a href="class_h5_1_1_user_data4_aiterate.html#adc317bc595aa58e76e24a11f43367d13">H5::UserData4Aiterate::op</a></div><div class="ttdeci">attr_operator_t op</div><div class="ttdef"><b>Definition:</b> H5Location.h:31</div></div>
</div><!-- fragment --></div><!-- contents -->

<!-- INCLUDE VIA PHP FROM <doc_root>/ed_libs/Footer.htm -->
<address>
<p><hr/></p>
<table width="100%" border="0">
  <tr valign="top">
      <td align="left">
          <address>
          <em> The HDF Group Help Desk:</em> <img src="help.jpg" align=top height=16>
          </address>
      </td><td width="5%">&nbsp;</td>
      <td align="right">
          <a href="https://support.hdfgroup.org/ftp/HDF5/releases/COPYING">Copyright</a> by
          <a href="https://www.hdfgroup.org">The HDF Group</a>
          <br>
          and the Board of Trustees of the University of Illinois
      </td>   
  </tr>   
</table>
</address>
<!-- END PHP INCLUDE FROM <doc_root>/ed_libs/Footer.htm -->
