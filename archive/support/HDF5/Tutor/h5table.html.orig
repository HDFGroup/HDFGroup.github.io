
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<!-- If no var is set for $page_title on the top of each page than default title will be HDF Group -->

<title>
The HDF Group - Information, Support, and Software</title>
	<meta name="keywords" content="hdf, hdfeos, blog, hdf blog, hdf5 blog, hdf5, hdf4, hdf tools, hdf libraries, hdf viewer, hdf format, hdf file, hdf java, nafxcw.lib, phdf5, open source, hierarchical data format, ncsa, database, python hdf, mike folk, hdfview, hdf5 parallel" />
	<meta name="description" content="The HDF Group is a not-for-profit corporation with the mission of sustaining the HDF technologies and supporting HDF user communities worldwide with production-quality software and services." />
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="expires" content="Wed, 26 Feb 2010 08:21:57 GMT" />
	<meta name="verify-v1" content="/m03HNmaDgGAcDe0PFtEVnXGtCkoeOocjr/Jwey2gdI=" />
	<link href="/css/layout.css" rel="stylesheet" type="text/css" media="screen, projection" />
	<link href="/css/print.css" rel="stylesheet" type="text/css" media="print" />
	<link rel="stylesheet" type="text/css" href="/css/js_style.css" />
	<link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/prototype/1.7.2.0/prototype.js"></script>
	<!--<script type="text/javascript" src="/scriptaculous/lib/prototype.js"></script>-->
	<script type="text/javascript" src="/scriptaculous/src/effects.js"></script>
	<script type="text/javascript" src="/scriptaculous/validation.js"></script>
	<script type="text/javascript" src="/scriptaculous/animatedcollapse.js"></script>
	<script type="text/javascript" src="/scriptaculous/rollover.js"></script>	
	<script type="text/javascript" src="/scriptaculous/functions.js"></script>
	<script type="text/javascript" src="/scriptaculous/sorttable.js"></script>
	<!--<script type="text/javascript" src="/jquery-1.2.2.pack.js"></script>-->
	<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
	<script type="text/javascript" src="/scriptaculous/jssor.slider.min.js"></script>

 	<link rel="stylesheet" type="text/css" href="/featuredcontentglider.css" />
    <script type="text/javascript" src="/featuredcontentglider.js"></script>

	</head>
	<body>
	<div id="mast_head">
		<a href="https://www.hdfgroup.org/"><img src="/images/hdf_logo.jpg" height="70" style="display:block; padding-left:10px;" align="left" alt="hdf images" /></a>
		<img src="/images/logo_5.jpg" height="70" style="display:block;" align="right" alt="hdf images" />
	</div> 
				
	<div id="nav_wrapper">
		<div>
		<div id="section-">
			<ul id="nav">
				<li id="t-index"><a href="https://www.hdfgroup.org/">Home</a> </li>
				<li id="t-products"><a href="/products/">Products</a></li>
				<li id="t-services"><a href="/services/">Services</a></li>
				<li id="t-about"><a href="/about/">About Us</a></li>
				<li id="t-news"><a href="/news/">News</a> </li>
				<li id="t-blog"><a href="https://www.hdfgroup.org/blog">Blog</a></li>
				<li id="t-contact"><a href="/about/contact.html">Contact Us</a></li> 
			</ul>
			<script type="text/javascript">
			
  (function() {
    var cx = '007250492606109219119:sb2eg2bgoyy';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<gcse:search></gcse:search>	
					<script type="text/javascript">
					    jQuery(document).ready(function ($) {
					        // var options = {
					        //     $ArrowNavigatorOptions: {
					        //         $Class: $JssorArrowNavigator$,
					        //         $ChanceToShow: 2
					        //     }
					        // };					    	


							var options = { 
											$AutoPlay: true, $SlideshowOptions: { $Class: $JssorSlideshowRunner$, $Transitions: [{ $Duration:5000, $Fade: true, $Opacity:2 }] } , 
											$ArrowNavigatorOptions: { 
												$Class: $JssorArrowNavigator$, 
												$ChanceToShow: 2
											}
										  };


					        var jssor_slider1 = new $JssorSlider$('slider1_container', options);
					    });
					</script>
									                  
			
		</div>
		</div>             
	</div>
				
<!--START: MAIN -->
<div id="wrapper" style="margin-top:-15px;"> 

<!--START: SIDE_BAR -->
<div id="side_bar">

<form method="get" action="" class="form" >
	<select onchange="window.open(this.options[this.selectedIndex].value,'_top')" name="" style="border:2px solid #c1c1c1;">
		<option value="" class="ql1">- - Quick Links - -</option>
		<option value="/HDF5/" class="ql">HDF5</option>
		<option value="/products/hdf4/" class="ql">HDF4</option>
		<option value="/tools/" class="ql">Tools</option>
		<option value="/projects/" class="ql">Projects</option>
		<option value="/downloads/" class="ql">Downloads</option>
		<option value="/documentation/" class="ql">Documentation</option>
	        <option value="/pubs/" class="ql">Publications</option>
		<option value="/about/" class="ql">Contact Us</option>
	</select>
</form>
<ul style="border:1px solid #c1c1c1; margin-top:25px;"> 

	<li style="background:url(/images/menubg.png); padding:0px; padding-left:7px; color:#27343C; font-weight:500; text-align:left;">
	LINKS</li><li><a href="https://www.hdfgroup.org/">Main Website</a></li><li><a  href="/HDF5/whatishdf5.html">What is HDF5?</a></li><li><a  href="/about/HDF5Brochure_2012.pdf">Online Brochure</a></li><li><a  href="/downloads/index.html">Downloads</a></li><li><a  href="/HDF5/doc/index.html">Documentation</a></li><li><a  href="/products/hdf5_tools/">Software using HDF5</a></li><li><a  href="/HDF5/users5.html">HDF5 Users</a></li><li><a  href="/HDF5/hdf5-files.html">Sample HDF5 Files</a></li><li><a  href="/HDF5/acknowledge5.html">Acknowledgments</a></li><li><a  href="/products/licenses.html">Licenses</a></li></ul> 

</div>

<!--END: SIDE_BAR -->

<!--START: CONTENT -->
<div id="content">
<p><font color="red"><center><strong>This web site is no longer maintained (but will remain online).<br /> Please see The HDF Group's new <a href="https://portal.hdfgroup.org">Support Portal</a> for the latest information.</strong></center></font></p>
	<div class=bc><p style="color:orange; ";><a href="/" title="HOME">HOME</a> &gt; <a href="/HDF5/" title="HDF5">HDF5</a> &gt; <a href="/HDF5/Tutor/" title="TUTOR">TUTOR</a></p></div>
<fieldset><h1>HDF5 Tutorial: HDF5 Table (H5TB)</h1></fieldset>
<p>
The HDF5 Table interface condenses the steps needed to create tables in HDF5.  
The datatype of the dataset that gets created is of type H5T_COMPOUND.  The
members of the table can have different datatypes.  
</p>
<P>
Following are the topics covered in this tutorial:
<P>
<ul class="ul">
 <li class="li3"><a href="#00">The Table Programming Model</a></li>
 <li class="li3"><a href="#01">Making and Reading a Table</a></li>
 <li class="li3"><a href="#02">Appending and Reading Records</a></li>
 <li class="li3"><a href="#03">Overwriting Records</a></li>
 <li class="li3"><a href="#04">Writing and Reading Fields by Name</a></li>
 <li class="li3"><a href="#05">Writing and Reading Fields by Index</a></li>
 <li class="li3"><a href="#06">Querying Functions</a></li>
 <li class="li3"><a href="#07">Deleting Records</a></li>
 <li class="li3"><a href="#08">Inserting Records</a></li>
 <li class="li3"><a href="#09">Adding Records from One Table to Another</a></li>
 <li class="li3"><a href="#10">Combining Tables</a></li>
 <li class="li3"><a href="#11">Inserting a New Field into a Table</a></li>
 <li class="li3"><a href="#12">Deleting a Field from a Table</a></li>
</ul>

<p>
If using the HDF5 interface to create tables, it requires numerous steps,
but does allow for more complex structures.  
Refer to the <A HREF="compound.html">Compound Datatypes</A> 
tutorial topic, for creating compound datatypes with the HDF5 interface.
</p>

<hr>


<A NAME="00">
<h2>The Table Programming Model</h2></A>

<p>In the Table programming model you must first obtain an identifier of
the group or file where you want to use the Table functions and then call the
appropriate function. For example: 
<pre>
  /* Create a new HDF5 file using default properties. */
  file_id = H5Fcreate (&quot;my_table.h5&quot;, H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);

  /* Call some TB function */
  H5TBsome_function (file_id, ...extra parameters);

  /* Close the file. */
  status = H5Fclose (file_id);
</pre>
 </p>

<h2>Alignment of Structure Fields</h2>

<p>In the following examples a structure called <code>Particle</code> is used
to represent a hypothetical particle. This particle has a name, a
position (specified by latitude and longitude), pressure and temperature. The
structure is defined as:
<pre>
   typedef struct Particle
    {
     char   name[16];
     int lati;
     int longi;
     float  pressure;
     double temperature;
    } Particle;
</pre>
</p>

<p>The sizes in bytes associated with the several types in the  <code> Particle </code>structure are as follow, for a total size of
 36 bytes.</p>

<table border="1" width="100%" cellspacing="0">
  <tr>
    <td width="20%"><code>name</code></td>
    <td width="20%"><code>lati</code></td>
    <td width="20%"><code>longi</code></td>
    <td width="20%"><code>pressure</code></td>
    <td width="20%"><code>temperature</code></td>
  </tr>
  <tr>
    <td width="20%">16</td>
    <td width="20%">4</td>
    <td width="20%">4</td>
    <td width="20%">4</td>
    <td width="20%">8</td>
  </tr>
</table>
<p>The byte-offset of fields within structures is compiler dependent though. In memory
this layout can be different. Here is an example of the memory layout for the
Intel86 architecture running the Microsoft Visual Studio compiler.&nbsp;</p>

<table border="1" width="100%" cellspacing="0">
  <tr>
    <td width="20%"><code>name</code></td>
    <td width="20%"><code>lati</code></td>
    <td width="20%"><code>longi</code></td>
    <td width="10%"><code>pressure</code></td>
    <td width="10%" style="background-color: #C0C0C0"><code>padding</code></td>
    <td width="20%"><code>temperature</code></td>
  </tr>
  <tr>
    <td width="20%">16</td>
    <td width="20%">4</td>
    <td width="20%">4</td>
    <td width="10%">4</td>
    <td width="10%" style="background-color: #C0C0C0">4</td>
    <td width="20%">8</td>
  </tr>
</table>
<p>The size of this structure in memory is 40 bytes. Four bytes of padding are inserted to
make &quot;pressure&quot; (being a 4-byte value) start on a 4-byte boundary in
memory. This (putting an n-byte item at an n-byte boundary) is called
&quot;natural alignment&quot;. It is done because most CPUs can access data
faster if it is naturally aligned. &nbsp;

Some compilers have means to force a specific structure alignment, but this
is highly compiler-specific and therefore cannot be used in a portable program.
</p>

<HR>
<A NAME="01">
<h2>Making and Reading a Table</h2></A>

<p>To create and write a table the function 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBmake_table">H5TBmake_table</a> is used.
</p>

<p>
The following comments pertain to the
<a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_01.c">ex_table_01.c</a> programming example.
</p>
<p>
The <code>dst_size</code> parameter contains the size in bytes of the structure associated with 
the table. This value is obtained with <code>sizeof</code>:
<pre>
   size_t dst_size = sizeof( Particle );
</pre>
</p>

<p>The parameter <code>dst_offset</code> is an array containing the offsets of the fields.
These values are obtained with the <code>HOFFSET</code> macro, which retrieves
the offset of a member from the beginning of its parent structure.
<pre>
  size_t dst_offset[NFIELDS] = { HOFFSET( Particle, name ), 
                                 HOFFSET( Particle, lati ),
                                 HOFFSET( Particle, longi ),
                                 HOFFSET( Particle, pressure ),
                                 HOFFSET( Particle, temperature )};
</pre>
</p>

<p>The parameter <code>field_type </code>is an array containing the type of
each field. These values are initialized as:
<pre>
   string_type = H5Tcopy( H5T_C_S1 );
   H5Tset_size( string_type, 16 );
   field_type[0] = string_type;
   field_type[1] = H5T_NATIVE_INT;
   field_type[2] = H5T_NATIVE_INT;
   field_type[3] = H5T_NATIVE_FLOAT;
   field_type[4] = H5T_NATIVE_DOUBLE;
</pre>
</p>

<p>To read back the table the function 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBread_table">H5TBread_table</a> is used.</p>

<p>The destination buffer, <code>dst_buf</code>, that was previously packed 
by <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBmake_table">H5TBmake_table</a>,
</code>is unpacked<!-- by <code>H5LTrepack</code>-->.</p>

 <h3>Programming Example</h3>
 <p>The following example demonstrates how to create and write a table with 
the function <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBmake_table">H5TBmake_table</a>.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_01.c">C Example</a> ] -- <code>ex_table_01.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_01.h5">HDF5 file</a> ] -- <code>ex_table_01.h5</code>
 </ul>

<HR>
<A NAME="02">
<h2>Appending and Reading Records</h2></A>

<p>To append records to a table the <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBappend_records">H5TBappend_records</a>
function is used. This function adds records to the end of the table. The dataset
    is extended to hold the new records.  
</p>
<p>To read the records just appended from disk use the function 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBread_records">H5TBread_records</a>.
</p>

 <h3>Programming Example</h3>
 <p>The following C program provides an example of how to append records to a table.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_02.c">C Example</a> ] -- <code>ex_table_02.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_02.h5">HDF5 file</a> ]
  -- <code>ex_table_02.h5</code>
 </ul>

<HR>
<A NAME="03">
<h2>Overwriting Records</h2></A>

<p>To overwrite records in a table use the 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBwrite_records">H5TBwrite_records</a>
function. This function overwrites one or several records by specifying a start
record and the number of records to write.
</p>

 <h3>Programming Example</h3>
 <p>The following C program provides an example of how to overwrite records in a table.&nbsp;The
table is initially filled with a set of fill values.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_03.c">C Example</a> ] -- <code>ex_table_03.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_03.h5">HDF5 file</a> ]
  -- <code>ex_table_03.h5</code>
 </ul>

<HR>
<A NAME="04">
<h2>Writing and Reading Fields by Name</h2></A>

<p>Individual fields can be written, either by specifying the names or indices. To overwrite fields in a table by name use the 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBwrite_fields_name">H5TBwrite_fields_name</a>
function. This function overwrites one or several fields by specifying their
names and a start record and the number of records to write. In the 
following example, 
the field <code>Pressure</code> is overwritten, writing three records starting at record 2:
<pre>
   H5TBwrite_fields_name (file_id, &quot;Table1&quot;, "Pressure", <em>2</em>, <em>3</em>, sizeof( float ), 
                         0, field_sizes_pre, pressure_in);
</pre>
</p>

<p>To overwrite the latitude and longitude fields, again writing 3 records
starting at record 2, use:
<pre>
   H5TBwrite_fields_name (file_id, "Table1", &quot;Latitude,Longitude&quot;, <em>2</em>, <em>3</em>, 
                         sizeof( Position ), field_offset_pos, field_sizes_pos, position_in);
</pre>
</p>

<p>The data buffer of this call is of type <code>Particle</code>, defined
as:
<pre>
  typedef struct Position
   {
    int lati;
    int longi;
   } Position;
</pre>
</p>

<p>To read individual fields from disk use the function 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBread_fields_name">H5TBread_fields_name</a>.
<!--
For example, this call will read back the entire table:</p>
<p>
   <code>H5TBread_fields_name (file_id, "Table1", 
              &quot;Name,Latitude,Longitude,Pressure,Temperature&quot;,
              dst_size, dst_offset, 0, NRECORDS-1, p_data_out);</code>
</p>
<p>Note that since the start and end records to read
from are zero based index values, the last element to read from is equal to the
number of records minus one. To read a subset of all the fields, use:</p>
<p>
   <code>H5TBread_fields_name (file_id, "Table2", &quot;Latitude,Longitude&quot;,0, NRECORDS-1, 
               dst_size, field_offset_pos, position_out);</code>
</p>

<p>Note that for the offsets of the fields of the array are initialized as:</p>
<p><code>size_t field_offset_pos[2] = { HOFFSET( Position, lati ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
HOFFSET( Position, longi )};</code></p>
<p>&nbsp;</p>
-->

 <h3>Programming Example</h3>
 <p> The following C program provides an example of how to overwrite
fields in a table, by specifying the field names.
<!--
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.
--></p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_04.c" >C Example</a> ] -- <code>ex_table_04.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_04.h5">HDF5 file</a> ]
  -- <code>ex_table_04.h5</code>
 </ul>
<HR>
<A NAME="05">
<h2>Writing and Reading Fields by Index</h2></A>

<p>Individual fields can also be written by specifying their indices. 
To overwrite fields in a table by index the 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBwrite_fields_index">H5TBwrite_fields_index</a>
function is used. This function overwrites one or several fields by 
specifying their indices, a start record and the number of records to write.  
<!--
The following example  will
 overwrite the
field <code>Pressure</code>,  writing 3 records starting at record 2: 
-->
</p>
<p>Note that <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBwrite_fields_index">H5TBwrite_fields_index</a>, as compared to 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBread_fields_name">H5TBread_fields_name</a>,
has one extra parameter, <code>nfields</code>, that specifies the number of
fields to write. <!--This value is also the dimension of the array <code> pressure_in.</code> -->
To read individual fields by index use the function 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBread_fields_index">H5TBread_fields_index</a>. 
</PRE>
 <h3>Programming Example</h3>
 <p> The following C program provides an example of how to overwrite
fields in a table, by specifying the field indices.
<!--
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.
-->
</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_05.c">C Example</a> ] -- <code>ex_table_05.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_05.h5">HDF5 file</a> ]
  -- <code>ex_table_05.h5</code>
 </ul>

<HR>
<A NAME="06">
<h2>Querying Functions</h2></A>

<p>Information about a table can be retrieved using two functions,
 <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBget_table_info">H5TBget_table_info</a>
 and <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBget_field_info">H5TBget_field_info</a>. The <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBget_table_info">H5TBget_table_info</a> 
retrieves the table dimensions (the number of records and the number of fields). 
</p>

<p>The <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBget_field_info">H5TBget_field_info</a> retrieves the names, the sizes, the
offsets of the fields, as well as the size of the compound datatype. 

 <h3>Programming Example</h3>
 <p> The following C program provides an example of how to
retrieve information from a table.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_06.c">C Example</a> ] -- <code>ex_table_06.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_06.h5">HDF5 file</a> ]
  -- <code>ex_table_06.h5</code>
 </ul>

<hr>
<A NAME="07">
<h2>Deleting Records</h2></A>

<p>Several contiguous records can be deleted from a table using the
 <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBdelete_record">H5TBdelete_record</a>
function. This function is simple to use. 
A start position and the number of records to delete are all that needs
to be specified. For example:
<pre>
   status=H5TBdelete_record ( file_id, TABLE_NAME, 3, 3 );
</pre>
</p>

<p>The above call deletes 3 records from a table,
starting at position 3. Note that this position is a zero index based position.
The records that are after the deleted ones are <i>pulled up</i>.</p>

 <h3>Programming Example</h3>
 <p> The following C program provides an example of how to use this
function.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_07.c">C Example</a> ] -- <code>ex_table_07.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_07.h5">HDF5 file</a> ]
  -- <code>ex_table_07.h5</code>
 </ul>

<HR>
<A NAME="08">
<h2>Inserting Records</h2></A>

<p>It is possible to insert records in any position of a table. To insert 
records in a table the <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBinsert_record">H5TBinsert_record</a> function is used. 
This function is similar to the <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBdelete_record">H5TBdelete_record</a> function, but has an extra 
parameter for the data being written. </p>

 <h3>Programming Example</h3>
 <p> The following C program provides an example of how to
insert records in a table.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_08.c">C Example</a> ] -- <code>ex_table_08.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_08.h5">HDF5 file</a> ]
  -- <code>ex_table_08.h5</code>
 </ul>

<HR>
<A NAME="09">
<h2>Adding Records from One Table to Another</h2></A>

<p>The <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBadd_records_from">H5TBadd_records_from</a> function is used to add records
from one  table to another.

<p>The following example reads <code>nrecords</code> records from <code>&quot;table1&quot;</code>, starting at
position <code>start1</code>, and inserts those records into <code>&quot;table2&quot;</code>, starting at
position <code>start2</code>.&nbsp;</p>

 <h3>Programming Example</h3>
 <p> The following C program provides an example of adding records from one
table to another.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_09.c">C Example</a> ] -- <code>ex_table_09.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_09.h5">HDF5 file</a> ]
  -- <code>ex_table_09.h5</code>
 </ul>

<HR>
<A NAME="10">
<h2>Combining Tables</h2></A>

<p>Two tables can be combined into a third, using the function 
<a href="/HDF5/doc/HL/RM_H5TB.html#H5TBcombine_tables">H5TBcombine_tables</a>.
To use this function only the names of the tables are necessary. 
In the  following example, two tables,
<code>&quot;table1&quot;</code> and <code>&quot;table2&quot; </code> are
combined into a new table called <code>&quot;table3&quot;</code>:</p>

<p>The tables can be located in different files, identified by the file
identifiers obtained from opening or creating the file. 
</p>

 <h3>Programming Example</h3>
 <p> The following C program provides an example of combining tables.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_10.c">C Example</a> ] -- <code>ex_table_10.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_10.h5">HDF5 file</a> ]
  -- <code>ex_table_10.h5</code>
 </ul>

<HR>
<A NAME="11">
<h2>Inserting a New Field into a Table</h2></A>

<p>A new field can be inserted into a table, using the function <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBinsert_field">H5TBinsert_field</a>.
To use this function, the field name, its type, the position where to insert the field and the data to insert in the table must be supplied. 
</p>

 <h3>Programming Example</h3>
 <p> The following C program provides an example of inserting a new field
into a table.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_11.c">C Example</a> ] -- <code>ex_table_11.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_11.h5">HDF5 file</a> ]
  -- <code>ex_table_11.h5</code>
 </ul>

<HR>
<A NAME="12">
<h2>Deleting a Field from a Table</h2></A>

<p>The function <a href="/HDF5/doc/HL/RM_H5TB.html#H5TBdelete_field">H5TBdelete_field</a> is used to delete a field
from a table.  To use this function only the field name is supplied. 

 <h3>Programming Example</h3>
 <p> The following C program provides an example of deleting a field from
a table.
 The corresponding HDF5 file that is generated is also referenced here. You can
 use an HDF5 file browser to access this file by clicking on the link below.</p>
 <ul>
  [ <a HREF="/ftp/HDF5/current/src/unpacked/hl/examples/ex_table_12.c">C Example</a> ] -- <code>ex_table_12.c</code><br>
  [ <a HREF="/ftp/HDF5/examples/highlevel/files/ex_table_12.h5">HDF5 file</a> ] 
  -- <code>ex_table_12.h5</code>
 </ul>


<hr>
<i>
- - Last modified: 21 December 2016</i>
	   </div>
	   <!--END: CONTENT -->
<!--END: WRAPPER -->
<script src="/scriptaculous/gatag.js" type="text/javascript"></script>

<!-- <script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script type="text/javascript" src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script> -->
				
<!--
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>

<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-3782034-1");
pageTracker._trackPageview();
} catch(err) {}</script>
-->

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-3782034-1', 'auto');
  ga('send', 'pageview');

</script>

</body>
</html>


