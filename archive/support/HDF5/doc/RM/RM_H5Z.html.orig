<html>
<head>
<title>
HDF5/H5Z API Specification
</title>
<link href="../ed_styles/RMelect.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#FFFFFF">

<!-- #BeginLibraryItem "/ed_libs/styles_RM.lbi" -->
<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://www.hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have      *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->
<!-- #EndLibraryItem --><!-- HEADER RIGHT " " -->

<!-- #BeginLibraryItem "/ed_libs/NavBar_RM.lbi" -->
<hr>
<center>
<table border="0" width="98%">
<tr><td valign="top" align="left">
<a href="../index.html">HDF5 documents and links</a>&nbsp;<br>
<a href="../H5.intro.html">Introduction to HDF5</a>&nbsp;<br>
<a href="../UG/HDF5_Users_Guide-Responsive HTML5/index.html">HDF5 User&rsquo;s Guide</a>&nbsp;<br>
<!--
<a href="Glossary.html">Glossary</a><br>
-->
</td>
<td valign="top" align="right">
In the 
<a href="RM_H5Front.html">HDF5 Reference Manual</a>&nbsp;
<font size="-1">
<br>
<a href="../HL/RM_H5DS.html">H5DS</a>&nbsp;&nbsp;
<a href="../HL/RM_H5IM.html">H5IM</a>&nbsp;&nbsp;
<a href="../HL/RM_H5LT.html">H5LT</a>&nbsp;&nbsp;
<a href="../HL/RM_H5PT.html">H5PT</a>&nbsp;&nbsp;
<a href="../HL/RM_H5TB.html">H5TB</a>&nbsp;
<a href="../HL/RM_HDF5Optimized.html">Optimized</a>&nbsp;
<br>
<a href="RM_H5.html">H5</a>&nbsp;&nbsp;
<a href="RM_H5A.html">H5A</a>&nbsp;&nbsp;
<a href="RM_H5D.html">H5D</a>&nbsp;&nbsp;
<a href="RM_H5E.html">H5E</a>&nbsp;&nbsp;
<a href="RM_H5F.html">H5F</a>&nbsp;&nbsp;
<a href="RM_H5G.html">H5G</a>&nbsp;&nbsp;
<a href="RM_H5I.html">H5I</a>&nbsp;&nbsp;
<a href="RM_H5L.html">H5L</a>&nbsp;
<br>
<a href="RM_H5O.html">H5O</a>&nbsp;&nbsp;
<a href="RM_H5P.html">H5P</a>&nbsp;&nbsp;
<a href="RM_H5PL.html">H5PL</a>&nbsp;&nbsp;
<a href="RM_H5R.html">H5R</a>&nbsp;&nbsp;
<a href="RM_H5S.html">H5S</a>&nbsp;&nbsp;
<a href="RM_H5T.html">H5T</a>&nbsp;&nbsp;
<a href="RM_H5Z.html">H5Z</a>&nbsp;
<br>
<a href="Tools.html">Tools</a>&nbsp;&nbsp;
<a href="PredefDTypes.html">Datatypes</a>&nbsp;&nbsp;
<a href="../fortran/index.html">Fortran</a>&nbsp;&nbsp;
<a href="APICompatMacros.html">Compatibility Macros</a>&nbsp;
<br>
<a href="CollectiveCalls.html">Collective Calls in Parallel</a>&nbsp;
<!--
<br>
<i><font size="-1">(Printable <a href="http://hdfgroup.org/HDF5/doc/PSandPDF/HDF5_RefManual.PDF">PDF</a> of this Reference Manual)</font></i>&nbsp;
-->
</font>
</td></tr>
</table>
</center>
<hr>
<!-- #EndLibraryItem --><center>
<h1>H5Z: Filter and Compression Interface</h1>
</center>

<h2>Filter and Compression API Functions</h2>

<br>
<strong>The C Interface:</strong>
<br>
These functions enable the user to configure new filters
for the local environment.

<table border="0" width="80%">
<tr><td valign="top" width="30%">
<ul>
    <li><a href="#Compression-FilterAvail">H5Zfilter_avail</a><br>
    <li><a href="#Compression-GetFilterInfo">H5Zget_filter_info</a>
</ul>
</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td valign="top" width="30%">
<ul>
    <li><a href="#Compression-Register">H5Zregister</a>
</ul>
</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td valign="top" width="30%">
<ul>
    <li><a href="#Compression-Unregister">H5Zunregister</a>
</ul>
</td></tr>
</table>

<br>
<strong>The Fortran Interface:</strong>
<br>
In general, each Fortran subroutine performs exactly the same task 
as the corresponding C function.  
<br>

<table border="0" width="80%">
<tr><td valign="top" width="30%">
    <ul>
    <li><a href="#Compression-FilterAvail">h5zfilter_avail_f</a>
    </ul>
</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td valign="top" width="30%">
    <ul>
<!--<li><a href="#Compression-Register">h5zregister_f</a><br>    -->
    <li><a href="#Compression-GetFilterInfo">h5zget_filter_info_f</a>
    </ul>
</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td valign="top" width="30%">
    <ul>
    <li><a href="#Compression-Unregister">h5zunregister_f</a>
    </ul>
</td></tr>
</table>

<p>
HDF5 supports a filter pipeline that provides the capability for standard 
and customized raw data processing during I/O operations.  
HDF5 is distributed with a small set of standard filters such as 
compression (gzip, SZIP, and a shuffling algorithm) and 
error checking (Fletcher32 checksum).
For further flexibility, the library allows a 
user application to extend the pipeline through the 
creation and registration of customized filters.
<p>
The flexibility of the filter pipeline implementation enables the 
definition of additional filters by a user application.
A filter
  <ul>
    <li>is associated with a dataset when the dataset is created,
    <li>can be used only with chunked data
        <br>(i.e., datasets stored in the <code>H5D_CHUNKED</code> 
        storage layout), and
    <li>is applied independently to each chunk of the dataset.
  </ul>
<p>
The HDF5 Library does not support filters for contiguous datasets 
because of the difficulty of implementing random access for partial I/O. 
Compact dataset filters are not supported because it would not produce 
significant results.
<p>
Filter identifiers for the filters distributed with the HDF5 Library
are as follows:
<table align="center" border="0">
  <tr valign="top" align="left">
  <td>
    <code>H5Z_FILTER_DEFLATE</code></td><td>The gzip compression,
          or deflation, filter
  </td></tr><tr><td>
    <code>H5Z_FILTER_SZIP</code></td><td>The SZIP compression filter
  </td></tr><tr><td>
    <code>H5Z_FILTER_NBIT</code></td><td>The N-bit compression filter
  </td></tr><tr><td>
    <code>H5Z_FILTER_SCALEOFFSET&nbsp;&nbsp;</code></td><td>The scale-offset 
          compression filter
  </td></tr><tr><td>
    <code>H5Z_FILTER_SHUFFLE</code></td><td>The shuffle algorithm filter
  </td></tr><tr><td>
    <code>H5Z_FILTER_FLETCHER32</code></td><td>The Fletcher32 checksum, 
          or error checking, filter
  </td></tr>
</table>
<p>
Custom filters that have been registered with the library will have
additional unique identifiers.
<p>
<!--
See <a href="../H5.user/Datasets.html"><cite>The Dataset Interface (H5D)</cite></a> 
in the <cite>HDF5 User&rsquo;s Guide</cite> for further information regarding 
data compression.
-->

See <em>
<a href="../Advanced/DynamicallyLoadedFilters/HDF5DynamicallyLoadedFilters.pdf">
HDF5 Dynamically Loaded Filters</a></em> for more information on how an HDF5 
application can apply a filter that is not registered with the HDF5 Library.
</p>









<!-- NEW PAGE -->
<!-- HEADER RIGHT " " -->

<!--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  -->
<!--       Include special topic files                       -->
<!--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  -->


<!--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  -->
<!--       Include function files                            -->
<!--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  -->



<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Zfilter_avail" -->
<hr>
<dl>
  <dt><div align=right><font color=999999 size=-1><i>
    Last modified: 10 December 2015
    </i></font></div>

  <br />
  <dt><strong>Name:</strong> <a name="Compression-FilterAvail">H5Zfilter_avail</a>
  <br />
  <br />
  <dt><strong>Signature:</strong>
    <dd><em>htri_t</em> <code>H5Zfilter_avail</code>(<em>H5Z_filter_t</em> <code>filter</code>)
  <br />
  <br />
  <dt><strong>Purpose:</strong>
    <dd>Determines whether a filter is available.
  <br />
  <br />
  <dt><strong>Description:</strong>
    <dd><code>H5Zfilter_avail</code> determines whether the filter 
        specified in <code>filter</code> is available to the application.
  <br />
  <br />
  <dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
            <td valign="top"><em>H5Z_filter_t</em>&nbsp;<code>filter&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Filter identifier.
              See the introduction to this section of the reference manual 
              for a list of valid filter identifiers.</td></tr>
    </table></ul>
  <br />
  <dt><strong>Returns:</strong>
    <dd>
        Returns a positive value if the specified filter is available.
        <br />
        Returns 0 if the specified filter is not available.
        <br />
        Returns a negative value when the function fails. 
        </dd>
  <br />
  <br />
  <dt><strong>Fortran90 Interface:</strong> h5zfilter_avail_f
    <dd>
	<pre>
SUBROUTINE h5zfilter_avail_f(filter, status, hdferr)
  IMPLICIT NONE
  INTEGER, INTENT(IN)  :: filter     ! Filter
                                     ! Valid values are:
                                     !    H5Z_FILTER_DEFLATE_F
                                     !    H5Z_FILTER_SHUFFLE_F
                                     !    H5Z_FILTER_FLETCHER32_F
                                     !    H5Z_FILTER_SZIP_F
  LOGICAL, INTENT(OUT) :: status     ! Flag indicating whether 
                                     ! filter is available: 
                                     !    .TRUE.
                                     !    .FALSE.
  INTEGER, INTENT(OUT) :: hdferr     ! Returns 0 if successful and -1 if fails
END SUBROUTINE h5zfilter_avail_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
  <dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
		  <td valign="top" align="left" width="10%">
		    <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
		    <strong>C</strong></td></tr>
        <tr>
		  <td valign="top">1.6.0</td>
          <td valign="top">
		    Function introduced in this release.</td></tr>
    </table></ul>
</dl>
  <br />
  <br />




<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Zget_filter_info" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Compression-GetFilterInfo">H5Zget_filter_info</a>
<dt><strong>Signature:</strong> 
    <dd><em>herr_t</em> 
        <code>H5Zget_filter_info</code>(
        <em>H5Z_filter_t</em> <code>filter</code>, 
        <em>unsigned int *</em><code>filter_config</code>
        )
<dt><strong>Purpose:</strong>
    <dd>Retrieves information about a filter.
<dt><strong>Description:</strong>
    <dd>
      <code>H5Zget_filter_info</code> retrieves information about a filter.  
      At present, this means that the function retrieves a 
      filter's configuration flags, indicating whether the filter is  
      configured to decode data, to encode data, neither, or both.
      <p>
      If <code>filter_config</code> is not set to <small>NULL</small>
      prior to the function call, the returned parameter contains a 
      bit field specifying the available filter configuration. 
      The configuration flag values can then be determined through
      a series of bitwise <small>AND</small> operations, as described below. 
      <p>
      Valid filter configuration flags include the following:
      <table>
        <tr valign="top"><td><code>&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td><code>H5Z_FILTER_CONFIG_ENCODE_ENABLED</code>&nbsp;</td>
          <td>Encoding is enabled for this filter.
              <br>
              In Fortran, <code>H5Z_FILTER_ENCODE_ENABLED_F</code>.
        </td></tr>
        <tr valign="top"><td>&nbsp;</td>
          <td><code>H5Z_FILTER_CONFIG_DECODE_ENABLED</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td>Decoding is enabled for this filter.
              <br>
              In Fortran, <code>H5Z_FILTER_DECODE_ENABLED_F</code>.
        </td></tr>
        <tr><td>&nbsp;</td>
          <td colspan="2" align="right"><small>(These flags 
          are defined for C in the HDF5 Library source code file 
          <code>H5Zpublic.h</code>.)</small>
        </td></tr>
       </table>
      A bitwise <small>AND</small> of the returned 
      <code>filter_config</code> and a valid 
      filter configuration flag will reveal whether
      the related configuration option is available.
      For example, if the value of 
      <br>
      <code>&nbsp;&nbsp;&nbsp;&nbsp;
            H5Z_FILTER_CONFIG_ENCODE_ENABLED 
            &amp; 
            filter_config</code>
      <br>
      is true, i.e., greater than <code>0</code> (zero), 
      the queried filter is configured to encode data;  
      if the value is <code>FALSE</code>, 
      i.e., equal to <code>0</code> (zero), 
      the filter is not so configured.
      <p>
      If a filter is not encode-enabled, the corresponding
      <code>H5Pset_*</code> function will return an error if the
      filter is added to a dataset creation property list (which is
      required if the filter is to be used to encode that dataset).
      For example, if the <code>H5Z_FILTER_CONFIG_ENCODE_ENABLED</code>
      flag is not returned for the SZIP filter,
      <code>H5Z_FILTER_SZIP</code>, a call to <code>H5Pset_szip</code>
      will fail.
      <p>
      If a filter is not decode-enabled, the application will not be
      able to read an existing file encoded with that filter.
      <p>
      This function should be called, and the returned
      <code>filter_config</code> analyzed, before calling
      any other function, such as <code>H5Pset_szip</code>,
      that might require a particular filter configuration.

<dt><strong>Parameters:</strong>
    <dd><dl>
      <dt><em>H5Z_filter_t</em> <code>filter</code>
        <dd>IN: Identifier of the filter to query.
            See the introduction to this section of the reference manual
            for a list of valid filter identifiers.
      <dt><em>unsigned int *</em><code>filter_config</code>
        <dd>OUT: A bit field encoding the returned filter information
    </dl></dd>

<!-- NEW PAGE -->
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value on success,
        a negative value on failure.
<dt><strong>Fortran90 Interface:</strong> 
    <dd>
    <pre>
SUBROUTINE h5zget_filter_info_f(filter, config_flags, hdferr)

  IMPLICIT NONE
  INTEGER, INTENT(IN)  :: filter        ! Filter, may be one of the
                                        ! following:
                                        !     H5Z_FILTER_DEFLATE_F
                                        !     H5Z_FILTER_SHUFFLE_F
                                        !     H5Z_FILTER_FLETCHER32_F
                                        !     H5Z_FILTER_SZIP_F
  INTEGER, INTENT(OUT) :: config_flags  ! Bit field indicating whether
                                        ! a filter's encoder and/or
                                        ! decoder are available
  INTEGER, INTENT(OUT) :: hdferr        ! Error code

END SUBROUTINE h5zfilter_avail_f
    </pre>
        <!--<dt><strong>Non-C API(s):</strong>
        <dd>

        <img src="Graphics/Java.gif">
        <img src="Graphics/C++.gif">
        -->
<dt><strong>History:</strong>
	<ul><table width="90%">
        <tr>
		  <td valign="top" align="left" width="10%">
		    <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
		    <strong>C</strong></td></tr>
        <tr>
		  <td valign="top">1.6.3</td>
          <td valign="top">
		    Function introduced in this release.<br>
			Fortran subroutine introduced in this release.</td></tr>
    </table></ul>
</dl>




<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Zregister" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 23 August 2012
    </i></font></div>

<dt><strong>Name:</strong> <a name="Compression-Register">H5Zregister</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Zregister</code>(<em>const H5Z_class_t *</em><code>filter_class</code>)
    )

<p />
<dt><strong>Purpose:</strong>
    <dd>Registers new filter.

<p />
<dt><strong>Description:</strong>
    <dd><code>H5Zregister</code> registers a new filter with the
      HDF5 library.  
      <p>
      Making a new filter available to an application is a two-step 
      process.  The first step is to write
      the three filter callback functions described below:
      <code>can_apply</code>, <code>set_local</code>, and <code>filter</code>.
      This call to <code>H5Zregister</code>, 
      <span class="termEmphasis">registering</span> the filter with the
      library, is the second step.  
      The <code>can_apply</code> and <code>set_local</code>
      fields can be set to <code>NULL</code> 
      if they are not required for the filter being registered.
      <p>
      <code>H5Zregister</code> accepts a single parameter, a pointer to 
      a buffer for the <code>filter_class</code> data structure. 
      That data structure must conform to one of the following
      definitions:
      <pre>
        typedef struct H5Z_class1_t {
            H5Z_filter_t id;
            const char  *name;
            H5Z_can_apply_func_t can_apply;
            H5Z_set_local_func_t set_local;
            H5Z_func_t filter;
        } H5Z_class1_t;

        typedef struct H5Z_class2_t {
            int version;
            H5Z_filter_t id;
            unsigned encoder_present;
            unsigned decoder_present;
            const char  *name;
            H5Z_can_apply_func_t can_apply;
            H5Z_set_local_func_t set_local;
            H5Z_func_t filter;
        } H5Z_class2_t;
      </pre>

      <p>
      <code>version</code> is a libray-defined value reporting
      the version number of the <em>H5Z_class_t</em> struct.
      This currently must be set to H5Z_CLASS_T_VERS.
      <p>
      <code>id</code> is the identifier for the new filter. 
      This is a user-defined value between 
      <code>H5Z_FILTER_RESERVED</code> and <code>H5Z_FILTER_MAX</code>. 
      These values are defined in the HDF5 source file 
      <code>H5Zpublic.h</code>, but the symbols
      <code>H5Z_FILTER_RESERVED</code> and <code>H5Z_FILTER_MAX</code>
      should always be used instead of the literal values. 
      <p>
      <code>encoder_present</code> is a library-defined value indicating 
      whether the filter&rsquo;s encoding capability is available to 
      the application.
      <p>
      <code>decoder_present</code> is a library-defined value indicating 
      whether the filter&rsquo;s encoding capability is available to 
      the application.
      <p>
      <code>name</code> is a descriptive comment used for debugging, 
      may contain a descriptive name for the filter, 
      and may be the null pointer. 
      <p>
      <code>can_apply</code>, described in detail below, 
      is a user-defined callback function which determines whether 
      the combination of the dataset creation property list values, 
      the datatype, and the dataspace represent a valid combination 
      to apply this filter to.
      <p>
      <code>set_local</code>, described in detail below, 
      is a user-defined callback function which sets any parameters that 
      are specific to this dataset, based on the combination of the 
      dataset creation property list values, the datatype, and the 
      dataspace.
      <p>
      <code>filter</code>, described in detail below, 
      is a user-defined callback function which performs the action 
      of the filter.
      <p>
      The statistics associated with a filter are not reset
      by this function; they accumulate over the life of the library.
      <p>
      <code>H5Z_class_t</code> is a macro which maps to either
      <code>H5Z_class1_t</code> or <code>H5Z_class2_t</code>, depending on the
      needs of the application.  To affect only this macro,
      <code>H5Z_class_t_vers</code> may be defined to either <code>1</code> or
      <code>2</code>.  Otherwise, it will behave in the same manner as other API
      compatibility macros.  See &ldquo;<a href="APICompatMacros.html">API
      Compatibility Macros in HDF5</a>&rdquo; for more information.
      <code>H5Z_class1_t</code> matches the <code>H5Z_class_t</code> structure
      that is used in the 1.6.x versions of the HDF5 library.
      <p>
      H5Zregister will automatically detect which structure type has been passed
      in, regardless of the mapping of the <code>H5Z_class_t</code> macro.
      However, the application must make sure that the fields are filled in
      according to the correct structure definition if the macro is used to
      declare the structure.

      <p>
      <strong>The callback functions</strong> 
      <br>
      Before <code>H5Zregister</code> can link a filter into an 
      application, three callback functions must be defined 
      as described in the HDF5 Library header file <code>H5Zpublic.h</code>.
      <p>
      When a filter is applied to the fractal heap for a group 
      (e.g., when compressing group metadata) and if the <i>can apply</i> 
      and <i>set local</i> callback functions have been defined for that
      filter, HDF5 passes the value <code>-1</code> for all parameters
      for those callback functions.  This is done to ensure that the filter
      will not be applied to groups if it relies on these parameters,
      as they are not applicable to group fractal heaps;  
      to operate on group fractal heaps, a filter must be capable of 
      operating on an opaque block of binary data.

      <p>
      <u>The <i>can apply</i> callback function</u> is defined as follows:<br>
      <dir>
          <em>typedef htri_t</em> (*<code>H5Z_can_apply_func_t</code>)
          (<em>hid_t</em> <code>dcpl_id</code>,
          <em>hid_t</em> <code>type_id</code>,
          <em>hid_t</em> <code>space_id</code>)
      </dir>
      <p>
      Before a dataset is created, the <i>can apply</i> callbacks for 
      any filters used in the dataset creation property list are called
      with the dataset's dataset creation property list, <code>dcpl_id</code>,
      the dataset's datatype, <code>type_id</code>, and
      a dataspace describing a chunk, <code>space_id</code>,
      (for chunked dataset storage).
      <p>
      This callback must determine whether the combination of the 
      dataset creation property list settings, the datatype, and the 
      dataspace represent a valid combination to which to apply this filter.  
      For example, an invalid combination may involve 
      the filter not operating correctly on certain datatypes,
      on certain datatype sizes, or on certain sizes of the chunk dataspace.
      If this filter is enabled through 
      <a href="RM_H5P.html#Property-SetFilter"><code>H5Pset_filter</code></a>
      as optional and the <em>can apply</em> function returns  
      <small>FALSE</small>, the library will skip the filter in the filter 
      pipeline.
      <p>
      This callback can be the <code>NULL</code> pointer, in which case 
      the library will assume that the filter can be applied to a dataset with 
      any combination of dataset creation property list values, datatypes, 
      and dataspaces.
      <p>
      The <i>can apply</i> callback function must return 
      a positive value for a valid combination, 
      zero for an invalid combination, and 
      a negative value for an error.
      <p>
      <u>The <i>set local</i> callback function</u> is defined as follows:<br>
      <dir>
          <em>typedef herr_t</em> (*<code>H5Z_set_local_func_t</code>)
          (<em>hid_t</em> <code>dcpl_id</code>,
          <em>hid_t</em> <code>type_id</code>,
          <em>hid_t</em> <code>space_id</code>)
      </dir>
      <p>
      After the <i>can apply</i> callbacks are checked for a new dataset, 
      the <i>set local</i> callback functions for any filters used in the 
      dataset creation property list are called.  
      These callbacks receive 
      <code>dcpl_id</code>, the dataset's private copy of the dataset
      creation property list passed in to <code>H5Dcreate</code> 
      (i.e. not the actual property list passed in to <code>H5Dcreate</code>);
      <code>type_id</code>, the datatype identifier passed in to 
      <code>H5Dcreate</code>, 
      which is not copied and should not be modified; and 
      <code>space_id</code>, a dataspace describing the chunk 
      (for chunked dataset storage), which should also not be modified.
      <p>
      The <i>set local</i> callback must set any filter parameters that are  
      specific to this dataset, based on the combination of the 
      dataset creation property list values, the datatype, and the dataspace.  
      For example, some filters perform different actions based on 
      different datatypes, datatype sizes, numbers of dimensions, 
      or dataspace sizes.
      <p>
      The <i>set local</i> callback may be the <code>NULL</code> pointer, 
      in which case, the library will assume that there are 
      no dataset-specific settings for this filter.
      <p>
      The <i>set local</i> callback function must return 
      a non-negative value on success and 
      a negative value for an error.

      <p>
      <u>The <i>filter operation</i> callback function</u>, 
      defining the filter's operation on the data, is defined as follows:
      <dir>
          <em>typedef size_t</em> (*<code>H5Z_func_t</code>)
          (<em>unsigned int</em> <code>flags</code>,
          <em>size_t</em> <code>cd_nelmts</code>,
          <em>const unsigned int</em> <code>cd_values[]</code>,
          <em>size_t</em> <code>nbytes</code>,
          <em>size_t *</em><code>buf_size</code>,
          <em>void **</em><code>buf</code>)
      </dir>

      <p>
      The parameters <code>flags</code>, <code>cd_nelmts</code>, 
      and <code>cd_values</code> are the same as for the function
      <a href="RM_H5P.html#Property-SetFilter"><code>H5Pset_filter</code></a>.
      The one exception is that an additional flag, 
      <code>H5Z_FLAG_REVERSE</code>, is set when 
      the filter is called as part of the input pipeline. 
      <p>
      The parameter <code>*buf</code> points to the input buffer 
      which has a size of <code>*buf_size</code> bytes,
      <code>nbytes</code> of which are valid data. 
      <p>
      The filter should perform the transformation in place if
      possible.  If the transformation cannot be done in place, 
      then the filter should allocate a new buffer with
      <code>malloc()</code> and assign it to <code>*buf</code>,
      assigning the allocated size of that buffer to
      <code>*buf_size</code>. 
      The old buffer should be freed by calling <code>free()</code>.
      <p>
      If successful, the <i>filter operation</i> callback function 
      returns the number of valid bytes of data contained in <code>*buf</code>.
      In the case of failure, the return value is <code>0</code> (zero)
      and all pointer arguments are left unchanged.

<p>
<dt><strong>Programming Note for C++ Developers Using C Functions:</strong>
    <dd>
      <p>If a C routine that takes a function pointer as an argument is 
      called from within C++ code, the C routine should be returned from 
      normally. </p>

      <p>Examples of this kind of routine include callbacks such as 
      <code>H5Pset_elink_cb</code> and <code>H5Pset_type_conv_cb</code> 
      and functions such as <code>H5Tconvert</code> and 
      <code>H5Ewalk2</code>.</p>

      <p>Exiting the routine in its normal fashion allows the HDF5 C 
      Library to clean up its work properly. In other words, if the C++ 
      application jumps out of the routine back to the C++ 
      &ldquo;catch&rdquo; statement, the library is not given the 
      opportunity to close any temporary data structures that were set 
      up when the routine was called. The C++ application should save 
      some state as the routine is started so that any problem that 
      occurs might be diagnosed.</p>







<!-- NEW PAGE -->
<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>const&nbsp;H5Z_class_t&nbsp;*</em><code>filter_class&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: A pointer to a buffer for the struct 
                containing filter-definition information.</td></tr>
    </table></dd>

<p />
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

<p />
<dt><strong>Fortran90 Interface:</strong>
    <dd>None.
<!--
	<pre>

	</pre>
-->		
		
<p />
<dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td></tr>
        <tr>
          <td valign="top">1.6.0</td>
          <td valign="top">
            This function was substantially revised in 
            Release 1.6.0 with a new <code>H5Z_class_t</code> 
            struct and new <em>set local</em> and <em>can apply</em> 
            callback functions.</td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            The fields <code>version</code>, <code>encoder_present</code>, 
            and <code>decoder_present</code> were added to the 
            <code>H5Z_class_t</code> struct in this release.</td></tr>
        <tr>
          <td valign="top">1.8.3</td>
          <td valign="top">
            <code>H5Z_class_t</code> renamed to <code>H5Z_class2_t</code>,
            <code>H5Z_class1_t</code> structure introduced for backwards
            compatibility with release 1.6.x, and <code>H5Z_class_t</code> macro
            introduced in this release.  Function modified to accept either
            structure type.</td><tr>
        <tr>
          <td valign="top">1.8.5</td>
          <td valign="top">
            Semantics of the <i>can apply</i> and <i>set local</i> 
            callback functions changed to accommodate the use of 
            filters with group fractal heaps.</td></tr>
        <tr>
          <td valign="top">1.8.6</td>
          <td valign="top">
            Return type for the <i>can apply</i> callback function, 
            <code>H5Z_can_apply_func_t</code>, 
            changed to <code><em>htri_t</em></code>.</td></tr>
    </table></ul>
</dl>



<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Zunregister" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
    Last modified: 2 July 2013
    </i></font></div>

  <dt><strong>Name:</strong> <a name="Compression-Unregister">H5Zunregister</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Zunregister</code>(<em>H5Z_filter_t</em> <code>filter</code>)

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Unregisters a filter.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Zunregister</code> unregisters the filter 
        specified in <code>filter</code>.
        <p>
        This function first iterates through all opened datasets and groups.  
        If an open object that uses this filter is found, the function
        will fail with a message indicating that an object using the filter 
        is still open.  
        All open files are then flushed to make sure that all cached data 
        that may use this filter are written out.  
        <p>
        If the application is a parallel program, all processes that 
        participate in collective data write should call this function 
        to ensure that all data is flushed.   
        <p>
        After a call to <code>H5Zunregister</code>, the filter
        specified in <code>filter</code> will no longer be 
        available to the application.

  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>H5Z_filter_t</em>&nbsp;<code>filter&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Identifier of the filter to be unregistered.
                See the introduction to this section of the reference manual 
                for a list of identifiers for standard filters
                distributed with the HDF5 Library.</td></tr>
        </table></dd>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

  <p>
  <dt><strong>Fortran90 Interface:</strong> h5zunregister_f
    <dd>
    <pre>
SUBROUTINE h5zunregister_f(filter, hdferr) 
  IMPLICIT NONE
  INTEGER, INTENT(IN)  :: filter  ! Filter; one of the possible values:
                                  !    H5Z_FILTER_DEFLATE_F
                                  !    H5Z_FILTER_SHUFFLE_F
                                  !    H5Z_FILTER_FLETCHER32_F
                                  !    H5Z_FILTER_SZIP_F
  INTEGER, INTENT(OUT) :: hdferr  ! Error code
                                  ! 0 on success, and -1 on failure
END SUBROUTINE h5zunregister_f
    </pre>

  <p>
  <dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.12</td>
          <td valign="top">
            Function modified to check for open objects using the 
            filter.</td></tr>
        <tr>
          <td valign="top">1.6.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table></ul>
</dl>



<!-- HEADER RIGHT " " -->
<!-- #BeginLibraryItem "/ed_libs/NavBar_RM.lbi" -->
<hr>
<center>
<table border="0" width="98%">
<tr><td valign="top" align="left">
<a href="../index.html">HDF5 documents and links</a>&nbsp;<br>
<a href="../H5.intro.html">Introduction to HDF5</a>&nbsp;<br>
<a href="../UG/HDF5_Users_Guide-Responsive HTML5/index.html">HDF5 User&rsquo;s Guide</a>&nbsp;<br>
<!--
<a href="Glossary.html">Glossary</a><br>
-->
</td>
<td valign="top" align="right">
In the 
<a href="RM_H5Front.html">HDF5 Reference Manual</a>&nbsp;
<font size="-1">
<br>
<a href="../HL/RM_H5DS.html">H5DS</a>&nbsp;&nbsp;
<a href="../HL/RM_H5IM.html">H5IM</a>&nbsp;&nbsp;
<a href="../HL/RM_H5LT.html">H5LT</a>&nbsp;&nbsp;
<a href="../HL/RM_H5PT.html">H5PT</a>&nbsp;&nbsp;
<a href="../HL/RM_H5TB.html">H5TB</a>&nbsp;
<a href="../HL/RM_HDF5Optimized.html">Optimized</a>&nbsp;
<br>
<a href="RM_H5.html">H5</a>&nbsp;&nbsp;
<a href="RM_H5A.html">H5A</a>&nbsp;&nbsp;
<a href="RM_H5D.html">H5D</a>&nbsp;&nbsp;
<a href="RM_H5E.html">H5E</a>&nbsp;&nbsp;
<a href="RM_H5F.html">H5F</a>&nbsp;&nbsp;
<a href="RM_H5G.html">H5G</a>&nbsp;&nbsp;
<a href="RM_H5I.html">H5I</a>&nbsp;&nbsp;
<a href="RM_H5L.html">H5L</a>&nbsp;
<br>
<a href="RM_H5O.html">H5O</a>&nbsp;&nbsp;
<a href="RM_H5P.html">H5P</a>&nbsp;&nbsp;
<a href="RM_H5PL.html">H5PL</a>&nbsp;&nbsp;
<a href="RM_H5R.html">H5R</a>&nbsp;&nbsp;
<a href="RM_H5S.html">H5S</a>&nbsp;&nbsp;
<a href="RM_H5T.html">H5T</a>&nbsp;&nbsp;
<a href="RM_H5Z.html">H5Z</a>&nbsp;
<br>
<a href="Tools.html">Tools</a>&nbsp;&nbsp;
<a href="PredefDTypes.html">Datatypes</a>&nbsp;&nbsp;
<a href="../fortran/index.html">Fortran</a>&nbsp;&nbsp;
<a href="APICompatMacros.html">Compatibility Macros</a>&nbsp;
<br>
<a href="CollectiveCalls.html">Collective Calls in Parallel</a>&nbsp;
<!--
<br>
<i><font size="-1">(Printable <a href="http://hdfgroup.org/HDF5/doc/PSandPDF/HDF5_RefManual.PDF">PDF</a> of this Reference Manual)</font></i>&nbsp;
-->
</font>
</td></tr>
</table>
</center>
<hr>
<!-- #EndLibraryItem -->


<!-- INCLUDE VIA PHP FROM <doc_root>/ed_libs/Footer2.htm -->

<address>
<table width="100%" border="0">
  <tr valign="top">
      <td align="left">
          <address>
          The HDF Group Help Desk: <img src="../Graphics/help.png" align=top height=16>
          <br>
          Describes HDF5 Release 1.10.
          </address>
      </td><td width="5%">&nbsp;</td>
      <td align="right">
          <a href="https://support.hdfgroup.org/ftp/HDF5/releases/COPYING">Copyright</a> by
          <a href="https://www.hdfgroup.org">The HDF Group</a>
          <br>
          and the Board of Trustees of the University of Illinois
      </td>   
  </tr>   
</table>
</address>

<!-- END PHP INCLUDE FROM <doc_root>/ed_libs/Footer2.htm -->


<SCRIPT LANGUAGE="JAVASCRIPT">
<!--
document.writeln("Last modified: February 2017");
-->
</SCRIPT>
 
</body>
</html>

