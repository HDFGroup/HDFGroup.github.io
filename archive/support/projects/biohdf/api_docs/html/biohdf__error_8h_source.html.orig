<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>BioHDF: biohdf_error.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">BioHDF&#160;<span id="projectnumber">version 0.3 alpha</span></div>
   <div id="projectbrief">Scalable NGS Data Storage Based on HDF5</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">biohdf_error.h</div>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*****************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright by The HDF Group                                                *</span>
<a name="l00003"></a>00003 <span class="comment"> * All rights reserved.                                                      *</span>
<a name="l00004"></a>00004 <span class="comment"> *                                                                           *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of BioHDF.  The full BioHDF copyright notice, including *</span>
<a name="l00006"></a>00006 <span class="comment"> * terms governing use, modification, and redistribution, is contained in    *</span>
<a name="l00007"></a>00007 <span class="comment"> * the file COPYING.  COPYING can be found at the root of the source code    *</span>
<a name="l00008"></a>00008 <span class="comment"> * distribution tree.  If you do not have access to this file, you may       *</span>
<a name="l00009"></a>00009 <span class="comment"> * request a copy from help@hdfgroup.org.                                    *</span>
<a name="l00010"></a>00010 <span class="comment"> *****************************************************************************/</span>
<a name="l00011"></a>00011 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef _BIOHDF_ERROR_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define _BIOHDF_ERROR_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">/*****************************************************************************</span>
<a name="l00025"></a>00025 <span class="comment"> * Error codes and definitions                                               *</span>
<a name="l00026"></a>00026 <span class="comment"> *****************************************************************************/</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 
<a name="l00031"></a><a class="code" href="group__biohdf__error.html#ga937fa9c5ae2aeda743ed50b74e340480">00031</a> <span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="group__biohdf__error.html#ga937fa9c5ae2aeda743ed50b74e340480" title="The BioHDF error return type.">biohdf_error</a>;
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 
<a name="l00036"></a><a class="code" href="group__biohdf__error.html#gabcb0f2f1fdb622e5b2e76643cd7cbddd">00036</a> <span class="preprocessor">#define BIOHDF_NO_ERROR 0</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00041"></a><a class="code" href="group__biohdf__error.html#ga763cad8a97990a8b2fa3072d5c068a1a">00041</a> <span class="preprocessor">#define BIOHDF_BADNESS -1</span>
<a name="l00042"></a>00042 <span class="preprocessor"></span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="comment">/*****************************************************************************</span>
<a name="l00046"></a>00046 <span class="comment"> * Error macros                                                              *</span>
<a name="l00047"></a>00047 <span class="comment"> *****************************************************************************/</span>
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="comment">/* NOTE: Any function which uses these macros must have a FAIL target        */</span>
<a name="l00050"></a>00050 
<a name="l00051"></a>00051 <span class="preprocessor">#if defined(_MSC_VER)</span>
<a name="l00052"></a>00052 <span class="preprocessor"></span><span class="preprocessor">    #define __func__ __FUNCTION__</span>
<a name="l00053"></a>00053 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span>
<a name="l00055"></a>00055 <span class="comment">/* Check to ensure a BioHDF error (biohdf_error) is BIOHDF_NO_ERROR. */</span>
<a name="l00056"></a>00056 <span class="preprocessor">#define CHECK_BIO(val)                                                      \</span>
<a name="l00057"></a>00057 <span class="preprocessor">do                                                                          \</span>
<a name="l00058"></a>00058 <span class="preprocessor">{                                                                           \</span>
<a name="l00059"></a>00059 <span class="preprocessor">    if((val) != BIOHDF_NO_ERROR){                                           \</span>
<a name="l00060"></a>00060 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00061"></a>00061 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00062"></a>00062 <span class="preprocessor">    }                                                                       \</span>
<a name="l00063"></a>00063 <span class="preprocessor">}while(0)</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span>
<a name="l00065"></a>00065 <span class="comment">/* Check to ensure an HDF5 herr_t is not an error value. */</span>
<a name="l00066"></a>00066 <span class="preprocessor">#define CHECK_HERR_T(val)                                                   \</span>
<a name="l00067"></a>00067 <span class="preprocessor">do                                                                          \</span>
<a name="l00068"></a>00068 <span class="preprocessor">{                                                                           \</span>
<a name="l00069"></a>00069 <span class="preprocessor">    if((val) &lt; 0){                                                          \</span>
<a name="l00070"></a>00070 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00071"></a>00071 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00072"></a>00072 <span class="preprocessor">    }                                                                       \</span>
<a name="l00073"></a>00073 <span class="preprocessor">}while(0)</span>
<a name="l00074"></a>00074 <span class="preprocessor"></span>
<a name="l00075"></a>00075 <span class="comment">/* Check to ensure an HDF5 hid_t is not an error value. */</span>
<a name="l00076"></a>00076 <span class="preprocessor">#define CHECK_HID_T(val)                                                    \</span>
<a name="l00077"></a>00077 <span class="preprocessor">do                                                                          \</span>
<a name="l00078"></a>00078 <span class="preprocessor">{                                                                           \</span>
<a name="l00079"></a>00079 <span class="preprocessor">    if((val) &lt; 0){                                                          \</span>
<a name="l00080"></a>00080 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00081"></a>00081 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00082"></a>00082 <span class="preprocessor">    }                                                                       \</span>
<a name="l00083"></a>00083 <span class="preprocessor">}while(0)</span>
<a name="l00084"></a>00084 <span class="preprocessor"></span>
<a name="l00085"></a>00085 <span class="comment">/* Check to ensure a pointer is not NULL. */</span>
<a name="l00086"></a>00086 <span class="preprocessor">#define CHECK_PTR(val)                                                      \</span>
<a name="l00087"></a>00087 <span class="preprocessor">do                                                                          \</span>
<a name="l00088"></a>00088 <span class="preprocessor">{                                                                           \</span>
<a name="l00089"></a>00089 <span class="preprocessor">    if(NULL == (val)){                                                      \</span>
<a name="l00090"></a>00090 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00091"></a>00091 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00092"></a>00092 <span class="preprocessor">    }                                                                       \</span>
<a name="l00093"></a>00093 <span class="preprocessor">}while(0)</span>
<a name="l00094"></a>00094 <span class="preprocessor"></span>
<a name="l00095"></a>00095 <span class="comment">/* Check to ensure an integer matches a test value. */</span>
<a name="l00096"></a>00096 <span class="preprocessor">#define CHECK_INT_EQ(val, test)                                             \</span>
<a name="l00097"></a>00097 <span class="preprocessor">do                                                                          \</span>
<a name="l00098"></a>00098 <span class="preprocessor">{                                                                           \</span>
<a name="l00099"></a>00099 <span class="preprocessor">    if((val) != (test)){                                                    \</span>
<a name="l00100"></a>00100 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00101"></a>00101 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00102"></a>00102 <span class="preprocessor">    }                                                                       \</span>
<a name="l00103"></a>00103 <span class="preprocessor">}while(0)</span>
<a name="l00104"></a>00104 <span class="preprocessor"></span>
<a name="l00105"></a>00105 <span class="comment">/* Check to ensure an integer does not match a test value. */</span>
<a name="l00106"></a>00106 <span class="preprocessor">#define CHECK_INT_NE(val, test)                                             \</span>
<a name="l00107"></a>00107 <span class="preprocessor">do                                                                          \</span>
<a name="l00108"></a>00108 <span class="preprocessor">{                                                                           \</span>
<a name="l00109"></a>00109 <span class="preprocessor">    if((val) == (test)){                                                    \</span>
<a name="l00110"></a>00110 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00111"></a>00111 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00112"></a>00112 <span class="preprocessor">    }                                                                       \</span>
<a name="l00113"></a>00113 <span class="preprocessor">}while(0)</span>
<a name="l00114"></a>00114 <span class="preprocessor"></span>
<a name="l00115"></a>00115 <span class="comment">/* Check to ensure an integer is not &gt;= a particular value */</span>
<a name="l00116"></a>00116 <span class="preprocessor">#define CHECK_INT_LT(val, test)                                             \</span>
<a name="l00117"></a>00117 <span class="preprocessor">do                                                                          \</span>
<a name="l00118"></a>00118 <span class="preprocessor">{                                                                           \</span>
<a name="l00119"></a>00119 <span class="preprocessor">    if((val) &gt;= (test)){                                                     \</span>
<a name="l00120"></a>00120 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00121"></a>00121 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00122"></a>00122 <span class="preprocessor">    }                                                                       \</span>
<a name="l00123"></a>00123 <span class="preprocessor">}while(0)</span>
<a name="l00124"></a>00124 <span class="preprocessor"></span>
<a name="l00125"></a>00125 <span class="comment">/* Check to ensure an integer is not &lt;= a particular value */</span>
<a name="l00126"></a>00126 <span class="preprocessor">#define CHECK_INT_GT(val, test)                                             \</span>
<a name="l00127"></a>00127 <span class="preprocessor">do                                                                          \</span>
<a name="l00128"></a>00128 <span class="preprocessor">{                                                                           \</span>
<a name="l00129"></a>00129 <span class="preprocessor">    if((val) &lt;= (test)){                                                     \</span>
<a name="l00130"></a>00130 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00131"></a>00131 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00132"></a>00132 <span class="preprocessor">    }                                                                       \</span>
<a name="l00133"></a>00133 <span class="preprocessor">}while(0)</span>
<a name="l00134"></a>00134 <span class="preprocessor"></span>
<a name="l00135"></a>00135 <span class="comment">/* Check to ensure an integer is not &gt; a particular value */</span>
<a name="l00136"></a>00136 <span class="preprocessor">#define CHECK_INT_LE(val, test)                                             \</span>
<a name="l00137"></a>00137 <span class="preprocessor">do                                                                          \</span>
<a name="l00138"></a>00138 <span class="preprocessor">{                                                                           \</span>
<a name="l00139"></a>00139 <span class="preprocessor">    if((val) &gt; (test)){                                                     \</span>
<a name="l00140"></a>00140 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00141"></a>00141 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00142"></a>00142 <span class="preprocessor">    }                                                                       \</span>
<a name="l00143"></a>00143 <span class="preprocessor">}while(0)</span>
<a name="l00144"></a>00144 <span class="preprocessor"></span>
<a name="l00145"></a>00145 <span class="comment">/* Check to ensure an integer is not &lt; a particular value */</span>
<a name="l00146"></a>00146 <span class="preprocessor">#define CHECK_INT_GE(val, test)                                             \</span>
<a name="l00147"></a>00147 <span class="preprocessor">do                                                                          \</span>
<a name="l00148"></a>00148 <span class="preprocessor">{                                                                           \</span>
<a name="l00149"></a>00149 <span class="preprocessor">    if((val) &lt; (test)){                                                     \</span>
<a name="l00150"></a>00150 <span class="preprocessor">        BIOHDFemit_error_message(__FILE__, __func__, (int)__LINE__);        \</span>
<a name="l00151"></a>00151 <span class="preprocessor">        goto FAIL;                                                          \</span>
<a name="l00152"></a>00152 <span class="preprocessor">    }                                                                       \</span>
<a name="l00153"></a>00153 <span class="preprocessor">}while(0)</span>
<a name="l00154"></a>00154 <span class="preprocessor"></span>
<a name="l00155"></a>00155 
<a name="l00156"></a>00156 <span class="comment">/*****************************************************************************</span>
<a name="l00157"></a>00157 <span class="comment"> * Set/unset verbose STDERR output                                           *</span>
<a name="l00158"></a>00158 <span class="comment"> *****************************************************************************/</span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 
<a name="l00169"></a>00169 <a class="code" href="group__biohdf__api.html#gae5900c33dbbdc28128512d531b7410a8" title="Platform-specific library prefix.">BIOHDF_API</a> <span class="keywordtype">void</span>
<a name="l00170"></a>00170 <a class="code" href="group__biohdf__error.html#ga3217b8c391a228d65afa7e8fc4b59502" title="Set whether or not error information is sent to STDERR.">BIOHDFset_stderr_setting</a>(<span class="keywordtype">int</span> use_stderr);
<a name="l00171"></a>00171 
<a name="l00172"></a>00172 
<a name="l00173"></a>00173 
<a name="l00178"></a>00178 <a class="code" href="group__biohdf__api.html#gae5900c33dbbdc28128512d531b7410a8" title="Platform-specific library prefix.">BIOHDF_API</a> <span class="keywordtype">void</span>
<a name="l00179"></a>00179 <a class="code" href="group__biohdf__error.html#gae2d63facdb7b2a127a109641ec8e9e9d" title="Determine whether or not error information is sent to STDERR.">BIOHDFget_stderr_setting</a>(<span class="keywordtype">int</span> *use_stderr);
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 
<a name="l00182"></a>00182 
<a name="l00183"></a>00183 <span class="comment">/*****************************************************************************</span>
<a name="l00184"></a>00184 <span class="comment"> * Emit an error message                                                     *</span>
<a name="l00185"></a>00185 <span class="comment"> *****************************************************************************/</span>
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 
<a name="l00188"></a>00188 
<a name="l00192"></a>00192 <a class="code" href="group__biohdf__api.html#gae5900c33dbbdc28128512d531b7410a8" title="Platform-specific library prefix.">BIOHDF_API</a> <span class="keywordtype">void</span>
<a name="l00193"></a>00193 <a class="code" href="group__biohdf__error.html#ga4e3a38de80e581008abb00aead195025" title="Write an error message.">BIOHDFemit_error_message</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *filename, <span class="keyword">const</span> <span class="keywordtype">char</span> *function, <span class="keywordtype">int</span> line);
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 
<a name="l00197"></a>00197 <span class="preprocessor">#endif</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Fri Dec 23 2011 11:59:36 for BioHDF by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.4 </small></address>
</body>
</html>
